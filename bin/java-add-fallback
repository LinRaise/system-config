#!/bin/bash

if test -e ~/etc/bash.d/cd_beagrep; then
    . ~/etc/bash.d/cd_beagrep
elif test "$AJOKE_DIR"; then
    . $AJOKE_DIR/etc/bash.d/cd_beagrep
fi

set -e
function die() {
    echo Error: "$@"
    exit -1
}

if [ x`uname -s` != "xDarwin" ];then
at_head=false
TEMP=$(getopt -o a -n $(basename $0) -- "$@")
eval set -- "$TEMP"
echo $1,$2,$3,$4,$5,%6
while true; do
    case "$1" in
        -a)
            at_head=true
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done
else
at_head=true
fi

if test $# != 1; then
    die "Error: Usage $(basename $0) fallback_code_dir"
fi

this_db_dir=$(cd -P .; cd_beagrep; pwd)
that_db_dir=$(cd -P "$1"; cd_beagrep; pwd)
#that_db_dir=$(cd -P "$1"; cd_beagrep && pwd) # DEBUG_MAC

if test $at_head = true; then
    for x in $(seq 100 -1 0); do
        ((y = x + 1)) || true
        if test -e $this_db_dir/.java-fallback.$x; then
            if test $(readlink -f $this_db_dir/.java-fallback.$x) = $(readlink -f $that_db_dir); then
                rm $this_db_dir/.java-fallback.$x
            else
                mv $this_db_dir/.java-fallback.$x $this_db_dir/.java-fallback.$y
            fi
        fi
    done
fi
for x in $(seq 0 100); do
    if test ! -e $this_db_dir/.java-fallback.$x; then
        break
    fi
    if test "$(readlink -f $this_db_dir/.java-fallback.$x)" = $that_db_dir; then
        die "$1 already a fallback at $x"
    fi
done

#echo "#70|$that_db_dir|$this_db_dir|"  #DEBUG_MAC
#echo relative-link $that_db_dir $this_db_dir/.java-fallback.$x  #DEBUG_MAC
relative-link $that_db_dir $this_db_dir/.java-fallback.$x
