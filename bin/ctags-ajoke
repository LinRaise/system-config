#!/usr/bin/perl

use strict;

open(my $debug, ">>", glob("~/.logs/ctags-exuberant.log"))
    or die "Can not open debug log file ~/.logs/ctags-exuberant.log";
sub debug(@) {
    print $debug "@_\n";
}

debug "$0", map {"'$_'"} @ARGV;

my $last_line;
my $package;
my $package_file;
my $is_java;
my $terminator;
my ($old_tag, $old_type, $old_line_num, $old_file);
my ($tag, $type, $line_num, $file);
my $custom_parser = qx(lookup-file -e ctags-custom);

if (not grep {$_ eq "--filter"} @ARGV) {
    use IPC::Open2;
    $|++;

    if ($custom_parser) {
        system($custom_parser, @ARGV);
    }
    my $ctags_pid = open2(my $read, my $write, "ctags-exuberant", @ARGV);
    my $is_java = grep {$_ eq "--language-force=java"} @ARGV;
    while (<$read>) {
        ($tag, $type, $line_num, $file) = m/^\s*(\S+)\s+(.*?)\s+(\d+)\s+(\S+)/;
        if ($file ne $old_file) {
            $package = "";
        }
        if ($is_java or $file =~ m/\.java|\.aidl/) {

            if ($type eq 'package') {
                $package = "$tag.";
                $package_file = $file;
                print;
            } else {
                if ($file ne $package_file) {
                    $package = "";
                }
                $tag =~ s/.*\.//;
                if (($tag ne $old_tag or $line_num != $old_line_num) and $old_tag !~ m/\./) {
                    print "$package$last_line" if $last_line and $old_type ne 'package';
                }
                print "$package$_" if $tag =~ m/\./;
            }
            $last_line = $_;
            ($old_tag, $old_type, $old_line_num, $old_file) = ($tag, $type, $line_num, $file);
        } else {
            print;
        }
    }
    if (($is_java or $old_file =~ m/\.java|\.aidl/) and $old_tag !~ m/\./) {
        print "$package$last_line" if $last_line and $old_type ne 'package';
    }
    exit;
}

my ($terminator) = grep {$_ =~ m/--filter-terminator=/} @ARGV;

$terminator =~ s/^--filter-terminator=//;

use IPC::Open2;

$|++;
my $ctags_pid = open2(my $read, my $write, "ctags-exuberant", @ARGV);
while (<STDIN>) {
    print $write "$_";
    chomp(my $source = $_);
    $write->flush();
    if ($custom_parser) {
        system($custom_parser, $source);
    }
    my $is_java;
    if ($_ =~ m/\.java|\.aidl/) {
        $is_java = 1;
    }

    my $seen_terminator;
    while (<$read>) {
        $seen_terminator = 0;
        if ($is_java) {
            ($tag, $type, $line_num, $file) = m/^\s*(\S+)\s+(.*?)\s+(\d+)\s+(\S+)/;
            if ($type eq 'package') {
                $package = $tag;
                print;
            } else {
                my $tag_no_dot = $tag;
                $tag_no_dot =~ s/.*\.//;
                if (($tag_no_dot ne $old_tag or $line_num != $old_line_num) and $old_tag !~ m/\./) {
                    if ($last_line and $old_type ne 'package') {
                        my $last_out = "$package.$last_line";
                        print $last_out;
                        my $last_tag_out = "$package.$old_tag";
                        $last_tag_out =~ s/\./-/g;
                        $last_out =~ s/^\S+/$last_tag_out/;
                        print $last_out;
                    }
                }
                if ($_ eq $terminator) {
                    print;
                    $seen_terminator = 1;
                    last;
                }

                if ($tag =~ m/\./) {
                    my $last_out = "$package.$_";
                    print $last_out;
                    my $last_tag_out = "$package.$tag";
                    $last_tag_out =~ s/\./-/g;
                    $last_out =~ s/^\S+/$last_tag_out/;
                    print $last_out;
                }
            }
            ($old_tag, $old_type, $old_line_num, $old_file) = ($tag, $type, $line_num, $file);
            $last_line = $_;
        } else {
            print;
            if ($_ eq $terminator) {
                $seen_terminator = 1;
                last;
            }
        }
    }
    if (not $seen_terminator) {
        debug "Ctags-ajoke $$ failed on $source";
        print $terminator;
        close $read;
        close $write;
        wait;
        $ctags_pid = open2($read, $write, "ctags-exuberant", @ARGV)
            or die "Can not open ctags-exuberant pipe";
    }
}
close($write);
