#!/bin/bash

set -e

function die() {
    echo Error: "$@"
    exit -1
}

me=$(readlink -f $0)
ajoke_bindir=$(dirname $me)
ajoke_dir=$(dirname $ajoke_bindir)

if test ! -e $ajoke_dir/etc/perl/BhjJava.pm; then
    die "$ajoke_dir/etc/perl/BhjJava.pm not found,
incorrect git clone? Please run:
    git clone --recursive http://github.com/baohaojun/ajoke"
fi

perl5d=$HOME/perl5

export PATH=$ajoke_bindir:$PATH
export PERL_LOCAL_LIB_ROOT="$perl5d";
export PERL_MB_OPT="--install_base $perl5d";
export PERL_MM_OPT="INSTALL_BASE=$perl5d";
export PERL5LIB="$perl5d/lib/perl5/x86_64-linux-gnu-thread-multi:$perl5d/lib/perl5:$ajoke_dir/etc/perl:$PERL5LIB";
export PATH="$perl5d/bin:$PATH";


function test-env() {
    # the cpan librarys?

    if ! perl -e 'use String::Approx'; then
        cpan String::Approx
    fi

    if ! perl -e 'use String::ShellQuote'; then
        cpan String::ShellQuote
    fi

    if ! perl -e 'use Text::Glob'; then
        cpan Text::Glob
    fi

    if ! global --version | grep -i 'Patched for ajoke'; then
        if yes-or-no-p "You have not built ajoke's version of GNU gtags,
build it now (will need sudo for installing)?"; then
            (
                cd $ajoke_dir
                cd ./external/global
                sh ./reconf.sh
                ./configure
                make -j8
                sudo make install
            )
        else
            die "ajoke's gtags not built"
        fi
    fi

    if ! ctags-exuberant --version; then
        if yes-or-no-p "You need to install ctags-exuberant, run apt-get now?"; then
            sudo apt-get install exuberant-ctags
        else
            die "Can't use ctags-exuberant"
        fi
    fi

    global_path=$(which global)

    if test -z "$global_path"; then
        die "global still not found after build";
    fi

    global_prefix=$(dirname $(dirname $global_path))
    gtags_conf_in=$ajoke_dir/external/global/gtags.conf.in

    perl -npe "s,\@prefix\@,$global_prefix,g" $gtags_conf_in > ~/.globalrc
    ln -sf $ajoke_dir/etc/.ctags ~/

    javac_path=$(which javac)
    if test -z "$javac_path"; then
        die "javac not found, please install: sudo apt-get install openjdk-6-jdk"
    fi
    java_dir=$(dirname $(dirname $javac_path))
    if test -e ~/.cache/for-code-reading/$java_dir/GTAGS; then
        echo "Good, you have done mkgtags for java"
    else
        (
            cd $java_dir
            mkgtags
        )
    fi
}

if test $# != 0; then
    "$@"
fi
